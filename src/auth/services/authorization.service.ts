import { Injectable } from '@nestjs/common';
import { UserRole } from '../enums/auth.enum';
import { AppPermission } from '../enums/permission.enum';
import { User } from '../entities/user.entity';

@Injectable()
export class AuthorizationService {
  private readonly rolePermissions: Record<UserRole, AppPermission[]> = {
    [UserRole.ADMIN]: [
      AppPermission.CREATE_UNITY,
      AppPermission.READ_UNITIES,
      AppPermission.READ_UNITY,
      AppPermission.UPDATE_UNITY,
      AppPermission.DELETE_UNITY,
      AppPermission.TOGGLE_LOCK_UNITY,
      AppPermission.UPDATE_UNITY_POINTS,
      AppPermission.UPLOAD_MULTIMEDIA,
      AppPermission.READ_MULTIMEDIA_LIST,
      AppPermission.READ_MULTIMEDIA_DETAIL,
      AppPermission.DELETE_MULTIMEDIA,
      AppPermission.DOWNLOAD_MULTIMEDIA,
      AppPermission.CREATE_LESSON,
      AppPermission.READ_LESSONS_LIST,
      AppPermission.READ_LESSON_DETAIL,
      AppPermission.READ_LESSONS_BY_UNITY,
      AppPermission.UPDATE_LESSON,
      AppPermission.DELETE_LESSON,
      AppPermission.TOGGLE_LOCK_LESSON,
      AppPermission.UPDATE_LESSON_POINTS,
      AppPermission.MARK_LESSON_COMPLETED,
      AppPermission.CREATE_EXERCISE,
      AppPermission.READ_EXERCISES_LIST,
      AppPermission.READ_EXERCISE_DETAIL,
      AppPermission.UPDATE_EXERCISE,
      AppPermission.DELETE_EXERCISE,
      AppPermission.CREATE_CULTURAL_ACHIEVEMENT,
      AppPermission.READ_CULTURAL_ACHIEVEMENTS_LIST,
      AppPermission.READ_CULTURAL_ACHIEVEMENT_DETAIL,
      AppPermission.INITIALIZE_CULTURAL_ACHIEVEMENT_PROGRESS,
      AppPermission.UPDATE_CULTURAL_ACHIEVEMENT_PROGRESS,
      AppPermission.READ_USER_CULTURAL_ACHIEVEMENTS,
      AppPermission.READ_CULTURAL_ACHIEVEMENT_PROGRESS,
      AppPermission.CREATE_MISSION_TEMPLATE,
      AppPermission.READ_MISSION_TEMPLATES_LIST,
      AppPermission.READ_MISSION_TEMPLATE_DETAIL,
      AppPermission.UPDATE_MISSION_TEMPLATE,
      AppPermission.CREATE_CONTENT,
      AppPermission.READ_CONTENT_LIST,
      AppPermission.READ_CONTENT_DETAIL,
      AppPermission.UPDATE_CONTENT,
      AppPermission.DELETE_CONTENT,
      AppPermission.READ_CONTENT_BY_UNITY_AND_TOPIC,
      AppPermission.CREATE_REWARD,
      AppPermission.READ_REWARDS_LIST,
      AppPermission.AWARD_REWARD_TO_USER,
      AppPermission.READ_USER_REWARDS,
      AppPermission.CONSUME_REWARD,
      AppPermission.CHECK_REWARD_STATUS,
      AppPermission.CREATE_ACTIVITY,
      AppPermission.READ_ACTIVITIES_LIST,
      AppPermission.READ_ACTIVITY_DETAIL,
      AppPermission.READ_ACTIVITIES_BY_TYPE,
      AppPermission.READ_ACTIVITIES_BY_DIFFICULTY,
      AppPermission.UPDATE_ACTIVITY,
      AppPermission.DELETE_ACTIVITY,
      AppPermission.UPDATE_ACTIVITY_POINTS,
    ],
    [UserRole.TEACHER]: [
      AppPermission.READ_UNITIES,
      AppPermission.READ_UNITY,
      AppPermission.UPLOAD_MULTIMEDIA,
      AppPermission.READ_MULTIMEDIA_LIST,
      AppPermission.READ_MULTIMEDIA_DETAIL,
      AppPermission.DELETE_MULTIMEDIA,
      AppPermission.DOWNLOAD_MULTIMEDIA,
      AppPermission.CREATE_LESSON,
      AppPermission.READ_LESSONS_LIST,
      AppPermission.READ_LESSON_DETAIL,
      AppPermission.READ_LESSONS_BY_UNITY,
      AppPermission.UPDATE_LESSON,
      AppPermission.DELETE_LESSON,
      AppPermission.TOGGLE_LOCK_LESSON,
      AppPermission.UPDATE_LESSON_POINTS,
      AppPermission.MARK_LESSON_COMPLETED,
      AppPermission.CREATE_EXERCISE,
      AppPermission.READ_EXERCISES_LIST,
      AppPermission.READ_EXERCISE_DETAIL,
      AppPermission.UPDATE_EXERCISE,
      AppPermission.CREATE_CULTURAL_ACHIEVEMENT,
      AppPermission.READ_CULTURAL_ACHIEVEMENTS_LIST,
      AppPermission.READ_CULTURAL_ACHIEVEMENT_DETAIL,
      AppPermission.INITIALIZE_CULTURAL_ACHIEVEMENT_PROGRESS,
      AppPermission.UPDATE_CULTURAL_ACHIEVEMENT_PROGRESS,
      AppPermission.READ_USER_CULTURAL_ACHIEVEMENTS,
      AppPermission.READ_CULTURAL_ACHIEVEMENT_PROGRESS,
      AppPermission.CREATE_CONTENT,
      AppPermission.READ_CONTENT_LIST,
      AppPermission.READ_CONTENT_DETAIL,
      AppPermission.UPDATE_CONTENT,
      AppPermission.DELETE_CONTENT,
      AppPermission.READ_CONTENT_BY_UNITY_AND_TOPIC,
      AppPermission.CREATE_ACTIVITY,
      AppPermission.READ_ACTIVITIES_LIST,
      AppPermission.READ_ACTIVITY_DETAIL,
      AppPermission.READ_ACTIVITIES_BY_TYPE,
      AppPermission.READ_ACTIVITIES_BY_DIFFICULTY,
      AppPermission.UPDATE_ACTIVITY,
      AppPermission.DELETE_ACTIVITY,
      AppPermission.UPDATE_ACTIVITY_POINTS,
    ],
    [UserRole.MODERATOR]: [
      AppPermission.READ_REWARDS_LIST,
      AppPermission.AWARD_REWARD_TO_USER,
      AppPermission.READ_USER_REWARDS,
      AppPermission.CHECK_REWARD_STATUS,
      AppPermission.READ_UNITIES,
      AppPermission.READ_UNITY,
      AppPermission.TOGGLE_LOCK_UNITY,
      AppPermission.READ_MULTIMEDIA_LIST,
      AppPermission.READ_MULTIMEDIA_DETAIL,
      AppPermission.DELETE_MULTIMEDIA,
      AppPermission.DOWNLOAD_MULTIMEDIA,
      AppPermission.READ_LESSONS_LIST,
      AppPermission.READ_LESSON_DETAIL,
      AppPermission.READ_LESSONS_BY_UNITY,
      AppPermission.TOGGLE_LOCK_LESSON,
      AppPermission.CREATE_EXERCISE,
      AppPermission.READ_EXERCISES_LIST,
      AppPermission.READ_EXERCISE_DETAIL,
      AppPermission.UPDATE_EXERCISE,
      AppPermission.READ_CULTURAL_ACHIEVEMENTS_LIST,
      AppPermission.READ_CULTURAL_ACHIEVEMENT_DETAIL,
      AppPermission.INITIALIZE_CULTURAL_ACHIEVEMENT_PROGRESS,
      AppPermission.UPDATE_CULTURAL_ACHIEVEMENT_PROGRESS,
      AppPermission.READ_USER_CULTURAL_ACHIEVEMENTS,
      AppPermission.READ_CULTURAL_ACHIEVEMENT_PROGRESS,
      AppPermission.READ_REWARDS_LIST,
      AppPermission.AWARD_REWARD_TO_USER,
      AppPermission.READ_USER_REWARDS,
      AppPermission.CHECK_REWARD_STATUS,
      AppPermission.READ_ACTIVITIES_LIST,
      AppPermission.READ_ACTIVITY_DETAIL,
      AppPermission.READ_ACTIVITIES_BY_TYPE,
      AppPermission.READ_ACTIVITIES_BY_DIFFICULTY,
      AppPermission.READ_CONTENT_LIST,
      AppPermission.READ_CONTENT_DETAIL,
      AppPermission.READ_CONTENT_BY_UNITY_AND_TOPIC,
    ],
    [UserRole.USER]: [
      AppPermission.READ_UNITIES,
      AppPermission.READ_UNITY,
      AppPermission.READ_MULTIMEDIA_LIST,
      AppPermission.READ_MULTIMEDIA_DETAIL,
      AppPermission.DOWNLOAD_MULTIMEDIA,
      AppPermission.READ_CONTENT_LIST,
      AppPermission.READ_CONTENT_DETAIL,
      AppPermission.READ_CONTENT_BY_UNITY_AND_TOPIC,
      AppPermission.READ_LESSONS_LIST,
      AppPermission.READ_LESSON_DETAIL,
      AppPermission.READ_LESSONS_BY_UNITY,
      AppPermission.READ_EXERCISES_LIST,
      AppPermission.READ_EXERCISE_DETAIL,
      AppPermission.READ_CULTURAL_ACHIEVEMENTS_LIST,
      AppPermission.READ_CULTURAL_ACHIEVEMENT_DETAIL,
      AppPermission.READ_REWARDS_LIST,
      AppPermission.READ_ACTIVITIES_LIST,
      AppPermission.READ_ACTIVITY_DETAIL,
      AppPermission.READ_ACTIVITIES_BY_TYPE,
      AppPermission.READ_ACTIVITIES_BY_DIFFICULTY,
    ], // Permisos básicos de usuario no cubiertos por MANAGE_*
    [UserRole.STUDENT]: [
      AppPermission.READ_ACTIVITIES_LIST,
      AppPermission.READ_ACTIVITY_DETAIL,
      AppPermission.READ_ACTIVITIES_BY_TYPE,
      AppPermission.READ_ACTIVITIES_BY_DIFFICULTY,
      AppPermission.READ_REWARDS_LIST,
      AppPermission.READ_USER_REWARDS,
      AppPermission.CONSUME_REWARD,
      AppPermission.CHECK_REWARD_STATUS,
      AppPermission.READ_CULTURAL_ACHIEVEMENTS_LIST,
      AppPermission.READ_CULTURAL_ACHIEVEMENT_DETAIL,
      AppPermission.READ_USER_CULTURAL_ACHIEVEMENTS,
      AppPermission.READ_CULTURAL_ACHIEVEMENT_PROGRESS,
      AppPermission.READ_EXERCISES_LIST,
      AppPermission.READ_EXERCISE_DETAIL,
      AppPermission.READ_UNITIES,
      AppPermission.READ_LESSONS_LIST,
      AppPermission.READ_LESSON_DETAIL,
      AppPermission.READ_LESSONS_BY_UNITY,
      AppPermission.MARK_LESSON_COMPLETED,
      AppPermission.READ_UNITY,
      AppPermission.READ_MULTIMEDIA_LIST,
      AppPermission.READ_MULTIMEDIA_DETAIL,
      AppPermission.DOWNLOAD_MULTIMEDIA,
    ], // Permisos básicos de estudiante no cubiertos por MANAGE_*
  };

  hasPermission(user: User, permission: AppPermission): boolean {
    if (!user || !user.roles || user.roles.length === 0) {
      return false;
    }

    // Check if any of the user's roles have the required permission
    return user.roles.some(role =>
      this.rolePermissions[role]?.includes(permission)
    );
  }

  hasAnyPermission(user: User, permissions: AppPermission[]): boolean {
    if (!user || !user.roles || user.roles.length === 0 || !permissions || permissions.length === 0) {
      return false;
    }

    return user.roles.some(role =>
      permissions.some(permission => this.rolePermissions[role]?.includes(permission))
    );
  }
}
